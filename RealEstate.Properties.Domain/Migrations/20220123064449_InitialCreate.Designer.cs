// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstate.Properties.Domain.Context;

namespace RealEstate.Properties.Domain.Migrations
{
    [DbContext(typeof(PropertiesContext))]
    [Migration("20220123064449_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RealEstate.Properties.Domain.Entities.OwnerEntity", b =>
                {
                    b.Property<Guid>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("OwnerId");

                    b.ToTable("Owner", "dbo");

                    b.HasData(
                        new
                        {
                            OwnerId = new Guid("5691eab3-50ce-4280-8659-ce208326fd97"),
                            Address = "Cl. 20A Sur # 10-31",
                            Birthday = new DateTime(1995, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cristian Bonilla"
                        },
                        new
                        {
                            OwnerId = new Guid("dcbe29f5-aa35-40c3-adc8-5e3b718a6000"),
                            Address = "Cl. 138 # 20-57",
                            Birthday = new DateTime(1987, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Natalia Guzman"
                        });
                });

            modelBuilder.Entity("RealEstate.Properties.Domain.Entities.PropertyEntity", b =>
                {
                    b.Property<Guid>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("CodeInternal")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PropertyId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Property", "dbo");

                    b.HasData(
                        new
                        {
                            PropertyId = new Guid("488148ae-7bbc-4186-8e36-c3bd1c0bfe34"),
                            Address = "6677 Schroeder Avenue",
                            CodeInternal = 34432111,
                            Name = "Headland Waters Mount Martha",
                            OwnerId = new Guid("5691eab3-50ce-4280-8659-ce208326fd97"),
                            Price = 1358000000m,
                            Year = 2018
                        },
                        new
                        {
                            PropertyId = new Guid("12ba0df8-cf55-4ccb-a109-c582906e6b12"),
                            Address = "Moussaouidreef 8",
                            CodeInternal = 98801123,
                            Name = "Luyary Jeddo",
                            OwnerId = new Guid("5691eab3-50ce-4280-8659-ce208326fd97"),
                            Price = 1297566000m,
                            Year = 2021
                        },
                        new
                        {
                            PropertyId = new Guid("39cd6b37-9f59-4e34-bbff-34d3963ba558"),
                            Address = "8098 Yundt Mission",
                            CodeInternal = 11983367,
                            Name = "Runneymede",
                            OwnerId = new Guid("5691eab3-50ce-4280-8659-ce208326fd97"),
                            Price = 1188954000m,
                            Year = 2020
                        },
                        new
                        {
                            PropertyId = new Guid("0ca10f96-364a-4d8e-b870-baddb7a9acbf"),
                            Address = "701, avenue de Guilbert",
                            CodeInternal = 87711809,
                            Name = "Zuburnano Up",
                            OwnerId = new Guid("dcbe29f5-aa35-40c3-adc8-5e3b718a6000"),
                            Price = 1877544000m,
                            Year = 2021
                        },
                        new
                        {
                            PropertyId = new Guid("cb9ec42f-3c07-4ca1-8ba8-59e09c504860"),
                            Address = "193 Kshlerin Spring",
                            CodeInternal = 43309922,
                            Name = "The Kingfisher",
                            OwnerId = new Guid("dcbe29f5-aa35-40c3-adc8-5e3b718a6000"),
                            Price = 1988411000m,
                            Year = 2020
                        });
                });

            modelBuilder.Entity("RealEstate.Properties.Domain.Entities.PropertyImageEntity", b =>
                {
                    b.Property<Guid>("PropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("PropertyImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.HasKey("PropertyId");

                    b.ToTable("PropertyImage", "dbo");
                });

            modelBuilder.Entity("RealEstate.Properties.Domain.Entities.PropertyTraceEntity", b =>
                {
                    b.Property<Guid>("PropertyTraceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("DateSale")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("PropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tax")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("Value")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("PropertyTraceId");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyTrace", "dbo");

                    b.HasData(
                        new
                        {
                            PropertyTraceId = new Guid("c4c42999-a4fc-40fb-b10b-6a14fc588fab"),
                            DateSale = new DateTime(2018, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Headland Waters Mount Martha Trace",
                            PropertyId = new Guid("488148ae-7bbc-4186-8e36-c3bd1c0bfe34"),
                            Tax = 5430000m,
                            Value = 1058000000m
                        },
                        new
                        {
                            PropertyTraceId = new Guid("529bbf7d-880a-4bb8-80fc-f605b3df0344"),
                            DateSale = new DateTime(2021, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Luyary Jeddo Trace",
                            PropertyId = new Guid("12ba0df8-cf55-4ccb-a109-c582906e6b12"),
                            Tax = 6132000m,
                            Value = 1117566000m
                        },
                        new
                        {
                            PropertyTraceId = new Guid("ae699884-d68a-486d-877d-55bd62046d66"),
                            DateSale = new DateTime(2020, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Runneymede Trace",
                            PropertyId = new Guid("39cd6b37-9f59-4e34-bbff-34d3963ba558"),
                            Tax = 5011000m,
                            Value = 1008954000m
                        },
                        new
                        {
                            PropertyTraceId = new Guid("774c3477-c8d5-49c5-9281-addb60d175b0"),
                            DateSale = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zuburnano Up Trace",
                            PropertyId = new Guid("0ca10f96-364a-4d8e-b870-baddb7a9acbf"),
                            Tax = 6234000m,
                            Value = 1417844000m
                        },
                        new
                        {
                            PropertyTraceId = new Guid("c82d1ac6-215f-4c21-aa2f-2140fe532a6b"),
                            DateSale = new DateTime(2021, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "The Kingfisher Trace",
                            PropertyId = new Guid("cb9ec42f-3c07-4ca1-8ba8-59e09c504860"),
                            Tax = 8950000m,
                            Value = 1122910000m
                        });
                });

            modelBuilder.Entity("RealEstate.Properties.Domain.Entities.PropertyEntity", b =>
                {
                    b.HasOne("RealEstate.Properties.Domain.Entities.OwnerEntity", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RealEstate.Properties.Domain.Entities.PropertyImageEntity", b =>
                {
                    b.HasOne("RealEstate.Properties.Domain.Entities.PropertyEntity", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("RealEstate.Properties.Domain.Entities.PropertyTraceEntity", b =>
                {
                    b.HasOne("RealEstate.Properties.Domain.Entities.PropertyEntity", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });
#pragma warning restore 612, 618
        }
    }
}
